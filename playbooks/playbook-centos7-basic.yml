---
- name: Basic CentOS bootstrap
    all CentOS machines including golden images and domained systems
  hosts: linux_centos7
  ignore_unreachable: true
  become: true
  become_method: ansible.builtin.sudo
  vars:
    ansible_become_password: password
    new_host_timezone: "America/New_York"
    dns_conf_file_contents: |
      [main]
      dns=dnsmasq
    dnsmasq_conf_file_contents: |
      conf-dir=/etc/dnsmasq.d,.rpmnew,.rpmsave,.rpmorig
      listen-address=127.0.0.1
      cache-size=1000

  tasks:

    - name: Set the time zone
      community.general.timezone:
        name: "{{ new_host_timezone }}"

    # ignore anything but errors on this, don't care about feedback
    # Why it is done this way and not using the built-in module:
    # https://docs.ansible.com/ansible/latest/collections/ansible/builtin/yum_module.html

    # - name: Clean up old Yum caches
    #  command: yum clean all
    #  changed_when: False
    #  args:
    #    warn: false

    # not available or Installed the same way in Fedora linux
    - name: Install EPEL repo for some other tool dependencies,
        separate and earlier since later yum packages may depend on it
      ansible.builtin.yum:
        name: epel-release
        state: present

    - name: Upgrade security-only packages to the latest version
      ansible.builtin.yum:
        # name: "*"
        security: true
        state: latest

    # this has to be early, before DNS caching stuff since it may be a
    # dependency for some services
    - name: Install my common Yum packages for troubleshooting
      ansible.builtin.yum:
        name: dnsmasq,mlocate,openssh-server,net-tools,htop,telnet,nmap,nc,
          openssl,unzip,wget,curl,tcpdump,traceroute,sysstat,bind-utils,lsof,
          vim,gcc,automake,autoconf,libtool,make,yum-utils,sudo,
          glibc-common,vim-enhanced,tar,grep,ntpdate,yum-cron,
          util-linux,jq,fio,ioping,screen,swaks,iperf3,coreutils,lvm2,xfsprogs,
          nfs-utils,tcpflow,nload,cloud-utils-growpart
        state: present

    - name: Install Python and NodeJS yum packages
      ansible.builtin.yum:
        name: python3-pip,nodejs,npm,python2-demjson
        state: present

    - name: Install Yum dependencies for joining domain
      ansible.builtin.yum:
        name: realmd,krb5-workstation,oddjob,oddjob-mkhomedir,sssd,
          samba-common-tools,pam_krb5,openssl-devel
        state: present

    # - name: Remove conflicting Yum packages for joining domain
    #  yum:
    #    name: krb5-libs,authconfig,samba-common,openldap-devel,pam-devel
    #    state: absent

    - name: Disable firewall
      ansible.builtin.service:
        name: firewalld
        state: stopped
        enabled: no

    - name: Yum packages that should NOT be installed
      # deltarpm saves bandwidth but slows down updates in CPU a LOT.
      # other packages are competing agents that use the same ports as
      # agents I use
      ansible.builtin.yum:
        name: deltarpm,nrpe,nagios-common,nagios-plugins,zabbix-release,
          fping,wazuh-agent,xinetd
        state: absent

    - name: Automatic updates service running and auto-start
      ansible.builtin.service:
        name: yum-cron
        state: started
        enabled: true

    - name: Disable AuditD service for compatability with default install of
        the Rapid7 agent
      ansible.builtin.service:
        name: auditd
        state: stopped
        enabled: no

    - name: Set SELinux to permissive (no enforcement) for compatability with
        Rapid7 products
      ansible.posix.selinux:
        state: permissive
        policy: targeted

    - name: Clean up unnecessary/unused Yum packages to save space
      ansible.builtin.yum:
        autoremove: true

    - name: Configure DNS caching config files - dns.conf
      ansible.builtin.copy:
        dest: "/etc/NetworkManager/conf.d/dns.conf"
        content: "{{ dns_conf_file_contents }}"
        mode: 0644

    - name: Configure DNS caching config files - dnsmasq.conf
      ansible.builtin.copy:
        dest: "/etc/dnsmasq.conf"
        content: "{{ dnsmasq_conf_file_contents }}"
        mode: 0644

    - name: DNS Masq service enabled and started
      ansible.builtin.service:
        name: dnsmasq
        state: started
        enabled: true

    # - name: Restart Network service to reload config to enable DNS caching
    #  systemd:
    #    state: started
    #    daemon_reload: true
    #    name: network

    - name: Enable on-going SSD/VM file system TRIM
      ansible.builtin.service:
        # https://opensource.com/article/20/2/trim-solid-state-storage-linux
        name: fstrim.timer
        state: started
        enabled: true
